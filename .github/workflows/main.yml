name: CI

on: 
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - uses: Azure/docker-login@v1
      with:
        login-server: wieldy.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - run: |
        VERSION_PREFIX=$(grep '<VersionPrefix>' hello.csproj | sed "s@.*<VersionPrefix>\(.*\)</VersionPrefix>.*@\1@")
        VERSION_SUFFIX=$(grep '<VersionSuffix>' hello.csproj | sed "s@.*<VersionSuffix>\(.*\)</VersionSuffix>.*@\1@")        
        BUILD_VERSION=$(echo ${{ github.sha }} | awk '{print substr($0, length($0)-7)}')
        SYNC_VERSION=$(echo ${{format('{0}-{1}.{2}', '${VERSION_PREFIX}', '${VERSION_SUFFIX}', github.run_number)}})
        echo "::save-state name=SYNC_VERSION::$SYNC_VERSION"
#        docker build . -t wieldy.azurecr.io/k8sdemo:${VERSION}
#        docker push wieldy.azurecr.io/k8sdemo:${VERSION}
        
    - run: |
        VERSION_PREFIX=$(grep '<VersionPrefix>' world.csproj | sed "s@.*<VersionPrefix>\(.*\)</VersionPrefix>.*@\1@")
        VERSION_SUFFIX=$(grep '<VersionSuffix>' world.csproj | sed "s@.*<VersionSuffix>\(.*\)</VersionSuffix>.*@\1@")        
        BUILD_VERSION=$(echo ${{ github.sha }} | awk '{print substr($0, length($0)-7)}')
        API_VERSION=$(echo ${{format('{0}-{1}.{2}', '${VERSION_PREFIX}', '${VERSION_SUFFIX}', github.run_number)}})
        echo "::set-env name=API_VERSION::$API_VERSION"
        
    - run: |
        VERSION_PREFIX=$(grep '<VersionPrefix>' world.csproj | sed "s@.*<VersionPrefix>\(.*\)</VersionPrefix>.*@\1@")
        VERSION_SUFFIX=$(grep '<VersionSuffix>' world.csproj | sed "s@.*<VersionSuffix>\(.*\)</VersionSuffix>.*@\1@")        
        BUILD_VERSION=$(echo ${{ github.sha }} | awk '{print substr($0, length($0)-7)}')
        WEB_VERSION=$(echo ${{format('{0}-{1}.{2}', '${VERSION_PREFIX}', '${VERSION_SUFFIX}', github.run_number)}})
        echo "::set-env name=WEB_VERSION::$WEB_VERSION"        
                
#    - uses: steebchen/kubectl@master
#      env:
#        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
#      with:
#        args: set image --record deployment/sync sync=wieldy.azurecr.io/sync-service:0.0.1-preview.11
#
#    - uses: steebchen/kubectl@master
#      env:
#        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
#      with:
#        args: set image --record deployment/api api=wieldy.azurecr.io/api-service:0.0.1-preview.104
#
#    - uses: steebchen/kubectl@master
#      env:
#        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
#      with:
#        args: set image --record deployment/web web=wieldy.azurecr.io/web-service:0.0.1-preview.324
    
    - uses: steebchen/kubectl@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        KUBECTL_VERSION: "1.15"
      with:
        args: rollout status deployment/sync
          
    - uses: steebchen/kubectl@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        KUBECTL_VERSION: "1.15"
      with:
        args: rollout status deployment/api

    - uses: steebchen/kubectl@master
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        KUBECTL_VERSION: "1.15"
      with:
        args: rollout status deployment/web
        
#    - uses: actions/checkout@v2
#    - name: Create Sentry release
#      uses: getsentry/action-release@v1
#      env:
#        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
#        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
#        SENTRY_PROJECT: helloworld
#      with:
#        environment: production
#        version: '${WEB_VERSION}'
    
    - name: Ending action
      run: |
        echo $WEB_VERSION
        echo $API_VERSION
        echo process.env.STATE_SYNC_VERSION
