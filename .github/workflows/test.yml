# This is a basic workflow to help you get started with Actions

name: TEST

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
#  push:
#    branches: 
#      - master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    if: github.event.pull_request.draft == false
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Create GitHub deployment
        uses: bobheadxi/deployments@master
        id: deployment
        with:
          step: start
          token: ${{ secrets.DEPLOY_TOKEN }}
          env: production
          ref: ${{ github.head_ref }}

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      - name: Update GitHub deployment status
        uses: bobheadxi/deployments@master
        if: always()
        with:
          step: finish
          token: ${{ secrets.DEPLOY_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: https://wieldy.app
  
  lighthouse-check:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@master
        - run: npm install
        - name: Run Lighthouse
          uses: foo-software/lighthouse-check-action@master
          id: lighthouseCheck
          with:
            urls: 'https://wieldy.app/'
            accessToken: ${{ secrets.LIGHTHOUSE_CHECK_GITHUB_ACCESS_TOKEN }}
            author: ${{ github.actor }}
            branch: ${{ github.head_ref }}
            sha: ${{ github.sha }}
            # slackWebhookUrl: ${{ secrets.SLACK_WEBHOOK }}
            # ... all your other inputs
        - name: Handle Lighthouse Check results
          uses: foo-software/lighthouse-check-status-action@master
          with:
            lighthouseCheckResults: ${{ steps.lighthouseCheck.outputs.lighthouseCheckResults }}
            minAccessibilityScore: "90"
            minBestPracticesScore: "50"
            minPerformanceScore: "50"
            minProgressiveWebAppScore: "50"
            minSeoScore: "50"
